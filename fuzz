#!/bin/bash
# Notes from S1ren (https://sirensecurity.io/blog/common/)
# Script made to pull up notes for fuzzing commands and more while filling in target IP and port for easy copy paste
# Example: fuzz 172.0.0.1 8080
# port 80 is default if left out

port="${2:-80}"
bold=$(tput bold)
normal=$(tput sgr0)
Blue='\033[1;94m'
Red='\033[1;101m'



if [[ -z $1 ]]; then
	printf "${bold}Please add RHOST IP and Port number: Default port 80: fuzz 192.168.0.1 80${normal}"

else
	
	printf "\n\n"
	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Nmap]${normal}\n"
	printf "nmap -p- -sT -sV -A $1\n"
	printf "nmap -p- -sC -sV $1 --open\n"
	printf "nmap -p- --script=vuln $1\n\n"
	
	printf "\n$Blue[+ HTTP Methods]${normal}\n"
	printf "nmap --script http-methods --script-args http-methods.url-path=\'/website\'\n"
	printf "nmap --script smb-enum-shares\n"

	printf "nmap -p80,443 --script=http-methods  --script-args http-methods.url-path=\'/directory/goes/here\'\n\n"
	

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ WPScan & SSL]${normal}\n"
	printf "wpscan --url http://$1:$port --disable-tls-checks --enumerate p --enumerate t --enumerate u\n\n"

	printf "\n$Blue[+ WPScan Brute Forceing:]${normal}\n"
	printf "wpscan --url http://$1:$port --disable-tls-checks -U users -P /usr/share/wordlists/rockyou.txt\n\n"
	
	printf "\n$Blue[+ Aggressive Plugin Detection:]${normal}\n"
	printf "wpscan --url http://$1:$port --enumerate p --plugins-detection aggressive\n\n"
	
	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Nikto with SSL and Evasion]${normal}\n"
	printf "nikto --host http://$1:$port -ssl -evasion 1\n"
	printf "$Red\"See Evasion Modalities\"${normal}\n\n"
	
	printf "$Blue[+ Nikto Standard]${normal}\n"
	printf "nikto --host http://$1:$port -C all\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ dns_recon]${normal}\n"
	printf "dnsrecon –d $1\n\n"
	
	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Gobuster Directory]${normal}\n"
	printf "gobuster dir -u http://$1:$port -w /opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt -l -k -t 30\n"
	
	printf "\n\n$Blue[+ Gobuster Files]${normal}\n"
	printf "gobuster dir -u http://$1:$port w /opt/SecLists/Discovery/Web-Content/raft-medium-files.txt -l -k -t 30\n"
	

	printf "\n\n$Blue[+ Gobuster for SubDomain brute forcing]${normal}\n"
	printf "gobuster dns -d domain.org -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 30\n"
	printf "$Red\"Just make sure any DNS name you find resolves to an in-scope address before you test it\"${normal}\n\n"
	
	printf "%0.s=" {1..79}
	
	printf "\n\n$Blue[+ Extract IPs from a text file]${normal}\n"
	printf "grep -o \'[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\' nmapfile.txt\n"
	printf "grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' FILE\n\n"

	printf "%0.s=" {1..79}
	
	printf "\n\n$Blue[+ Wfuzz XSS Fuzzing]${normal}\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-BruteLogic.txt http://$1:$port/FUZZ\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Fuzzing/XSS/XSS-Jhaddix.txt http://$1:$port/FUZZ\n\n"
	
	printf "\n$Blue[+ Command Injection with Post Data]${normal}\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Fuzzing/command-injection-commix.txt -d "doi=FUZZ" http://$1:$port/FUZZ\n\n"
		
	printf "\n$Blue[+ Test for Parameter Existence]${normal}\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt http://$1:$port/FUZZ\n\n"
	
	printf "\n$Blue[+ Authenticated Fuzzing Directories]${normal}\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -hc 404 -d \"SESSIONID=value\" \"http://$1:$port/FUZZ/\"\n\n"

	printf "\n$Blue[+ Authenticated File Fuzzing]${normal}\n"
	printf "wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/raft-medium-files.txt -hc 404 -d \"SESSIONID=value\" \"http://$1:$port/FUZZ\"\n\n"

	printf "\n$Blue[+ Fuzz Directories]${normal}\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-large-directories.txt --hc 404 \"http://$1:$port/FUZZ/\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-large-directories.txt --hc 404 --hh 0 \"http://$1:$port/FUZZ/\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 \"http://$1:$port/FUZZ/\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt --hc 404 --hh 0 \"http://$1:$port/FUZZ/\"\n\n"


	printf "\n$Blue[+ Fuzz Files]${normal}\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-large-files.txt --hc 404 \"http://$1:$port/FUZZ\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-large-files.txt --hc 404 --hh 0 \"http://$1:$port/FUZZ\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-medium-files.txt --hc 404 \"http://$1:$port/FUZZ\"\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-medium-files.txt --hc 404 --hh 0 \"http://$1:$port/FUZZ\"\n\n"
	
	printf "\n$Blue[+ Fuzz Files Large Words]${normal}\n"
	printf "wfuzz -c -z file,/opt/SecLists/Discovery/Web-Content/raft-large-words.txt --hc 404 \"http://$1:$port/FUZZ\"\n\n"

	printf "\n$Blue[+ Users]${normal}\n"
	printf "wfuzz -c -z file,/opt/SecLists/Usernames/top-usernames-shortlist.txt --hc 404,403  \"http://$1:$port/FUZZ\"\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Command Injection with commix, ssl, waf, random agent]${normal}\n"
	printf "commix --url=\"https://$1?parameter=\" --level=3 --force-ssl --skip-waf --random-agent\n\n"

	
	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ SQLMap]${normal}\n"
	printf "sqlmap -u http://$1:$port --threads=2 --time-sec=10 --level=2 --risk=2 --technique=T --force-ssl\n"
	printf "sqlmap -u http://$1:$port --threads=2 --time-sec=10 --level=4 --risk=3 --dump\n"
	printf "/SecLists/Fuzzing/alphanum-case.txt\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ SMTP User Enum]${normal}\n"
	printf "smtp-user-enum -M VRFY -U /opt/SecLists/Usernames/xato-net-10-million-usernames.txt -t $1\n"
	printf "smtp-user-enum -M EXPN -U /opt/SecLists/Usernames/xato-net-10-million-usernames.txt -t $1\n"
	printf "smtp-user-enum -M RCPT -U /opt/SecLists/Usernames/xato-net-10-million-usernames.txt -t $1\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Social Recon]${normal}\n"
	printf "theharvester -d domain.org -l 500 -b google\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Command Execution Verification - Ping Check]${normal}\n"
	printf "tcpdump -i any -c5 icmp\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Check Network]${normal}\n"
	printf "netdiscover /r 0.0.0.0/24\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ Into Outfile Door]${normal}\n"
	printf "SELECT “” into outfile “/var/www/WEROOT/backdoor.php”;\n\n"

	printf "%0.s=" {1..79}

	printf "\n\n$Blue[+ LFI - PHP Filter Checks]${normal}\n"
	printf "php://filter/convert.base64-encode/resource=\n\n"

	printf "%0.s=" {1..79}


fi
